/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __ORG_MPRIS_MEDIAPLAYER2_PLAYLISTS_H__
#define __ORG_MPRIS_MEDIAPLAYER2_PLAYLISTS_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.mpris.MediaPlayer2.Playlists */

#define TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS (org_mpris_media_player2_playlists_get_type ())
#define ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS, OrgMprisMediaPlayer2Playlists))
#define IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS))
#define ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS, OrgMprisMediaPlayer2PlaylistsIface))

struct _OrgMprisMediaPlayer2Playlists;
typedef struct _OrgMprisMediaPlayer2Playlists OrgMprisMediaPlayer2Playlists;
typedef struct _OrgMprisMediaPlayer2PlaylistsIface OrgMprisMediaPlayer2PlaylistsIface;

struct _OrgMprisMediaPlayer2PlaylistsIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_activate_playlist) (
    OrgMprisMediaPlayer2Playlists *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_PlaylistId);

  gboolean (*handle_get_playlists) (
    OrgMprisMediaPlayer2Playlists *object,
    GDBusMethodInvocation *invocation,
    guint arg_Index,
    guint arg_MaxCount,
    const gchar *arg_Order,
    gboolean arg_ReverseOrder);

  GVariant * (*get_active_playlist) (OrgMprisMediaPlayer2Playlists *object);

  const gchar *const * (*get_orderings) (OrgMprisMediaPlayer2Playlists *object);

  guint  (*get_playlist_count) (OrgMprisMediaPlayer2Playlists *object);

  void (*playlist_changed) (
    OrgMprisMediaPlayer2Playlists *object,
    GVariant *arg_Playlist);

};

GType org_mpris_media_player2_playlists_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *org_mpris_media_player2_playlists_interface_info (void);
guint org_mpris_media_player2_playlists_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void org_mpris_media_player2_playlists_complete_activate_playlist (
    OrgMprisMediaPlayer2Playlists *object,
    GDBusMethodInvocation *invocation);

void org_mpris_media_player2_playlists_complete_get_playlists (
    OrgMprisMediaPlayer2Playlists *object,
    GDBusMethodInvocation *invocation,
    GVariant *Playlists);



/* D-Bus signal emissions functions: */
void org_mpris_media_player2_playlists_emit_playlist_changed (
    OrgMprisMediaPlayer2Playlists *object,
    GVariant *arg_Playlist);



/* D-Bus method calls: */
void org_mpris_media_player2_playlists_call_activate_playlist (
    OrgMprisMediaPlayer2Playlists *proxy,
    const gchar *arg_PlaylistId,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_mpris_media_player2_playlists_call_activate_playlist_finish (
    OrgMprisMediaPlayer2Playlists *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_mpris_media_player2_playlists_call_activate_playlist_sync (
    OrgMprisMediaPlayer2Playlists *proxy,
    const gchar *arg_PlaylistId,
    GCancellable *cancellable,
    GError **error);

void org_mpris_media_player2_playlists_call_get_playlists (
    OrgMprisMediaPlayer2Playlists *proxy,
    guint arg_Index,
    guint arg_MaxCount,
    const gchar *arg_Order,
    gboolean arg_ReverseOrder,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_mpris_media_player2_playlists_call_get_playlists_finish (
    OrgMprisMediaPlayer2Playlists *proxy,
    GVariant **out_Playlists,
    GAsyncResult *res,
    GError **error);

gboolean org_mpris_media_player2_playlists_call_get_playlists_sync (
    OrgMprisMediaPlayer2Playlists *proxy,
    guint arg_Index,
    guint arg_MaxCount,
    const gchar *arg_Order,
    gboolean arg_ReverseOrder,
    GVariant **out_Playlists,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
guint org_mpris_media_player2_playlists_get_playlist_count (OrgMprisMediaPlayer2Playlists *object);
void org_mpris_media_player2_playlists_set_playlist_count (OrgMprisMediaPlayer2Playlists *object, guint value);

const gchar *const *org_mpris_media_player2_playlists_get_orderings (OrgMprisMediaPlayer2Playlists *object);
gchar **org_mpris_media_player2_playlists_dup_orderings (OrgMprisMediaPlayer2Playlists *object);
void org_mpris_media_player2_playlists_set_orderings (OrgMprisMediaPlayer2Playlists *object, const gchar *const *value);

GVariant *org_mpris_media_player2_playlists_get_active_playlist (OrgMprisMediaPlayer2Playlists *object);
GVariant *org_mpris_media_player2_playlists_dup_active_playlist (OrgMprisMediaPlayer2Playlists *object);
void org_mpris_media_player2_playlists_set_active_playlist (OrgMprisMediaPlayer2Playlists *object, GVariant *value);


/* ---- */

#define TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY (org_mpris_media_player2_playlists_proxy_get_type ())
#define ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY, OrgMprisMediaPlayer2PlaylistsProxy))
#define ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY, OrgMprisMediaPlayer2PlaylistsProxyClass))
#define ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY, OrgMprisMediaPlayer2PlaylistsProxyClass))
#define IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY))
#define IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_PROXY))

typedef struct _OrgMprisMediaPlayer2PlaylistsProxy OrgMprisMediaPlayer2PlaylistsProxy;
typedef struct _OrgMprisMediaPlayer2PlaylistsProxyClass OrgMprisMediaPlayer2PlaylistsProxyClass;
typedef struct _OrgMprisMediaPlayer2PlaylistsProxyPrivate OrgMprisMediaPlayer2PlaylistsProxyPrivate;

struct _OrgMprisMediaPlayer2PlaylistsProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  OrgMprisMediaPlayer2PlaylistsProxyPrivate *priv;
};

struct _OrgMprisMediaPlayer2PlaylistsProxyClass
{
  GDBusProxyClass parent_class;
};

GType org_mpris_media_player2_playlists_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgMprisMediaPlayer2PlaylistsProxy, g_object_unref)
#endif

void org_mpris_media_player2_playlists_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgMprisMediaPlayer2Playlists *org_mpris_media_player2_playlists_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
OrgMprisMediaPlayer2Playlists *org_mpris_media_player2_playlists_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void org_mpris_media_player2_playlists_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgMprisMediaPlayer2Playlists *org_mpris_media_player2_playlists_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
OrgMprisMediaPlayer2Playlists *org_mpris_media_player2_playlists_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON (org_mpris_media_player2_playlists_skeleton_get_type ())
#define ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON, OrgMprisMediaPlayer2PlaylistsSkeleton))
#define ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON, OrgMprisMediaPlayer2PlaylistsSkeletonClass))
#define ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON, OrgMprisMediaPlayer2PlaylistsSkeletonClass))
#define IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON))
#define IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYLISTS_SKELETON))

typedef struct _OrgMprisMediaPlayer2PlaylistsSkeleton OrgMprisMediaPlayer2PlaylistsSkeleton;
typedef struct _OrgMprisMediaPlayer2PlaylistsSkeletonClass OrgMprisMediaPlayer2PlaylistsSkeletonClass;
typedef struct _OrgMprisMediaPlayer2PlaylistsSkeletonPrivate OrgMprisMediaPlayer2PlaylistsSkeletonPrivate;

struct _OrgMprisMediaPlayer2PlaylistsSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  OrgMprisMediaPlayer2PlaylistsSkeletonPrivate *priv;
};

struct _OrgMprisMediaPlayer2PlaylistsSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType org_mpris_media_player2_playlists_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgMprisMediaPlayer2PlaylistsSkeleton, g_object_unref)
#endif

OrgMprisMediaPlayer2Playlists *org_mpris_media_player2_playlists_skeleton_new (void);


G_END_DECLS

#endif /* __ORG_MPRIS_MEDIAPLAYER2_PLAYLISTS_H__ */
