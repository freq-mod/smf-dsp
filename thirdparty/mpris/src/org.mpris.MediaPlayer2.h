/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __ORG_MPRIS_MEDIAPLAYER2_H__
#define __ORG_MPRIS_MEDIAPLAYER2_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.mpris.MediaPlayer2 */

#define TYPE_ORG_MPRIS_MEDIA_PLAYER2 (org_mpris_media_player2_get_type ())
#define ORG_MPRIS_MEDIA_PLAYER2(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2, OrgMprisMediaPlayer2))
#define IS_ORG_MPRIS_MEDIA_PLAYER2(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2))
#define ORG_MPRIS_MEDIA_PLAYER2_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2, OrgMprisMediaPlayer2Iface))

struct _OrgMprisMediaPlayer2;
typedef struct _OrgMprisMediaPlayer2 OrgMprisMediaPlayer2;
typedef struct _OrgMprisMediaPlayer2Iface OrgMprisMediaPlayer2Iface;

struct _OrgMprisMediaPlayer2Iface
{
  GTypeInterface parent_iface;


  gboolean (*handle_quit) (
    OrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_raise) (
    OrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

  gboolean  (*get_can_quit) (OrgMprisMediaPlayer2 *object);

  gboolean  (*get_can_raise) (OrgMprisMediaPlayer2 *object);

  gboolean  (*get_can_set_fullscreen) (OrgMprisMediaPlayer2 *object);

  const gchar * (*get_desktop_entry) (OrgMprisMediaPlayer2 *object);

  gboolean  (*get_fullscreen) (OrgMprisMediaPlayer2 *object);

  gboolean  (*get_has_track_list) (OrgMprisMediaPlayer2 *object);

  const gchar * (*get_identity) (OrgMprisMediaPlayer2 *object);

  const gchar *const * (*get_supported_mime_types) (OrgMprisMediaPlayer2 *object);

  const gchar *const * (*get_supported_uri_schemes) (OrgMprisMediaPlayer2 *object);

};

GType org_mpris_media_player2_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *org_mpris_media_player2_interface_info (void);
guint org_mpris_media_player2_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void org_mpris_media_player2_complete_raise (
    OrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

void org_mpris_media_player2_complete_quit (
    OrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void org_mpris_media_player2_call_raise (
    OrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_mpris_media_player2_call_raise_finish (
    OrgMprisMediaPlayer2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_mpris_media_player2_call_raise_sync (
    OrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GError **error);

void org_mpris_media_player2_call_quit (
    OrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_mpris_media_player2_call_quit_finish (
    OrgMprisMediaPlayer2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_mpris_media_player2_call_quit_sync (
    OrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
gboolean org_mpris_media_player2_get_can_quit (OrgMprisMediaPlayer2 *object);
void org_mpris_media_player2_set_can_quit (OrgMprisMediaPlayer2 *object, gboolean value);

gboolean org_mpris_media_player2_get_fullscreen (OrgMprisMediaPlayer2 *object);
void org_mpris_media_player2_set_fullscreen (OrgMprisMediaPlayer2 *object, gboolean value);

gboolean org_mpris_media_player2_get_can_set_fullscreen (OrgMprisMediaPlayer2 *object);
void org_mpris_media_player2_set_can_set_fullscreen (OrgMprisMediaPlayer2 *object, gboolean value);

gboolean org_mpris_media_player2_get_can_raise (OrgMprisMediaPlayer2 *object);
void org_mpris_media_player2_set_can_raise (OrgMprisMediaPlayer2 *object, gboolean value);

gboolean org_mpris_media_player2_get_has_track_list (OrgMprisMediaPlayer2 *object);
void org_mpris_media_player2_set_has_track_list (OrgMprisMediaPlayer2 *object, gboolean value);

const gchar *org_mpris_media_player2_get_identity (OrgMprisMediaPlayer2 *object);
gchar *org_mpris_media_player2_dup_identity (OrgMprisMediaPlayer2 *object);
void org_mpris_media_player2_set_identity (OrgMprisMediaPlayer2 *object, const gchar *value);

const gchar *org_mpris_media_player2_get_desktop_entry (OrgMprisMediaPlayer2 *object);
gchar *org_mpris_media_player2_dup_desktop_entry (OrgMprisMediaPlayer2 *object);
void org_mpris_media_player2_set_desktop_entry (OrgMprisMediaPlayer2 *object, const gchar *value);

const gchar *const *org_mpris_media_player2_get_supported_uri_schemes (OrgMprisMediaPlayer2 *object);
gchar **org_mpris_media_player2_dup_supported_uri_schemes (OrgMprisMediaPlayer2 *object);
void org_mpris_media_player2_set_supported_uri_schemes (OrgMprisMediaPlayer2 *object, const gchar *const *value);

const gchar *const *org_mpris_media_player2_get_supported_mime_types (OrgMprisMediaPlayer2 *object);
gchar **org_mpris_media_player2_dup_supported_mime_types (OrgMprisMediaPlayer2 *object);
void org_mpris_media_player2_set_supported_mime_types (OrgMprisMediaPlayer2 *object, const gchar *const *value);


/* ---- */

#define TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY (org_mpris_media_player2_proxy_get_type ())
#define ORG_MPRIS_MEDIA_PLAYER2_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY, OrgMprisMediaPlayer2Proxy))
#define ORG_MPRIS_MEDIA_PLAYER2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY, OrgMprisMediaPlayer2ProxyClass))
#define ORG_MPRIS_MEDIA_PLAYER2_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY, OrgMprisMediaPlayer2ProxyClass))
#define IS_ORG_MPRIS_MEDIA_PLAYER2_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY))
#define IS_ORG_MPRIS_MEDIA_PLAYER2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY))

typedef struct _OrgMprisMediaPlayer2Proxy OrgMprisMediaPlayer2Proxy;
typedef struct _OrgMprisMediaPlayer2ProxyClass OrgMprisMediaPlayer2ProxyClass;
typedef struct _OrgMprisMediaPlayer2ProxyPrivate OrgMprisMediaPlayer2ProxyPrivate;

struct _OrgMprisMediaPlayer2Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  OrgMprisMediaPlayer2ProxyPrivate *priv;
};

struct _OrgMprisMediaPlayer2ProxyClass
{
  GDBusProxyClass parent_class;
};

GType org_mpris_media_player2_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgMprisMediaPlayer2Proxy, g_object_unref)
#endif

void org_mpris_media_player2_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgMprisMediaPlayer2 *org_mpris_media_player2_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
OrgMprisMediaPlayer2 *org_mpris_media_player2_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void org_mpris_media_player2_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgMprisMediaPlayer2 *org_mpris_media_player2_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
OrgMprisMediaPlayer2 *org_mpris_media_player2_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON (org_mpris_media_player2_skeleton_get_type ())
#define ORG_MPRIS_MEDIA_PLAYER2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON, OrgMprisMediaPlayer2Skeleton))
#define ORG_MPRIS_MEDIA_PLAYER2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON, OrgMprisMediaPlayer2SkeletonClass))
#define ORG_MPRIS_MEDIA_PLAYER2_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON, OrgMprisMediaPlayer2SkeletonClass))
#define IS_ORG_MPRIS_MEDIA_PLAYER2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON))
#define IS_ORG_MPRIS_MEDIA_PLAYER2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON))

typedef struct _OrgMprisMediaPlayer2Skeleton OrgMprisMediaPlayer2Skeleton;
typedef struct _OrgMprisMediaPlayer2SkeletonClass OrgMprisMediaPlayer2SkeletonClass;
typedef struct _OrgMprisMediaPlayer2SkeletonPrivate OrgMprisMediaPlayer2SkeletonPrivate;

struct _OrgMprisMediaPlayer2Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  OrgMprisMediaPlayer2SkeletonPrivate *priv;
};

struct _OrgMprisMediaPlayer2SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType org_mpris_media_player2_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgMprisMediaPlayer2Skeleton, g_object_unref)
#endif

OrgMprisMediaPlayer2 *org_mpris_media_player2_skeleton_new (void);


G_END_DECLS

#endif /* __ORG_MPRIS_MEDIAPLAYER2_H__ */
